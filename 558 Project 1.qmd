---
title: "558 Project 1"
author: "Susan H. and Holly P."
format: pdf
editor: visual
---

Load in necessary libraries:

```{r}
#| warning: FALSE
#| message: FALSE
library(tidyverse)
library(readr)


```

Read in data using read_csv():

```{r}
#| warning: FALSE
#| message: FALSE
census_data <- read_csv("https://www4.stat.ncsu.edu/~online/datasets/EDU01a.csv")


```

## Question 1

```{r}

census_data1 <- census_data |> select(Area_name, STCOU, ends_with("D")) 

head(census_data1, 5)


```

## Question 2

```{r}
census_long <- census_data1 |> pivot_longer(cols = ends_with("D"), names_to = "EnrollmentID", values_to = "Enrollment_Total")
head(census_long,5)
```

## Question 3

```{r}
 #no dates above 1996
long_updated <- census_long |> mutate( Year = as.numeric(substr(EnrollmentID, start = 8, stop = 9))) |> 
mutate(Year = Year + 1900) |> 
mutate(Measurement = substr(EnrollmentID, start = 1, stop = 7) )

head(long_updated, 5)

```

## Question 4

```{r}
#County Dataset
row_names <- rownames(long_updated)
county_subset <- row_names %in% grep(pattern = ", \\w\\w", long_updated$Area_name)
county_tibble <- subset(long_updated, county_subset)
class(county_tibble) <- c("county", class(county_tibble))
head(county_tibble, 10)

#State Dataset
state_tibble <- subset(long_updated, !(row_names %in% grep(pattern = ", \\w\\w", long_updated$Area_name)))
class(state_tibble) <- c("state", class(state_tibble))
head(state_tibble, 10)
```

## Question 5

```{r}

county_tibble1 <- county_tibble |> mutate(State = substr(county_tibble$Area_name, start = nchar(Area_name)-1, stop = nchar(Area_name)))

county_tibble1

```

## Question 6

```{r}

state_tibble1 <- state_tibble |> mutate(Division = case_when(
  
  Area_name %in% c("CONNECTICUT", "MAINE", "MASSACHUSETTS", "NEW HAMPSHIRE", "RHODE ISLAND", "VERMONT") ~ "New England", 
  Area_name %in% c("NEW JERSEY", "NEW YORK", "PENNYSYLVANIA") ~ "Mid-Atlantic", 
  
  Area_name %in% c("ILLINOIS", "INDIANIA", "MICHIGAN", "OHIO", "WISCONSIN") ~ "East North Central", 
  
  Area_name %in% c("IOWA", "KANSAS", "MINNESOTA", "MISSOURI", "NEBRASKA", "NORTH DAKOTA", "SOUTH DAKOTA") ~ "West North Central", 
  
  Area_name %in% c("DELAWARE", "DISTRICT OF COLUMBIA", "District of Columbia", "FLORIDA", "GEORGIA", "MARYLAND", "NORTH CAROLINA", "SOUTH CAROLINA", "VIRGINIA", "WEST VIRGINIA") ~ "South Atlantic", 
  
  Area_name %in% c("ALABAMA", "KENTUCKY", "MISSISSIPPI", "TENNESSEE") ~ "East South Central", 
  
  Area_name %in% c("ARKANSAS", "LOUISIANA", "OKLAHOMA", "TEXAS") ~"West South Central", 
  
  Area_name %in% c("ARIZONA", "COLORADO", "IDAHO", "NEVADA", "MONTANA", "NEW MEXICO", "UTAH", "WYOMING") ~ "Mountain", 
  
  Area_name %in% c("ALASKA", "CALIFORNIA", "HAWAII", "OREGON", "WASHINGTON") ~ "Pacific", .default = "ERROR"
  
))

state_tibble1

```

Read in second data set

```{r}
census_data2 <- read_csv("https://www4.stat.ncsu.edu/~online/datasets/EDU01b.csv")
```

# Write Function for steps 1 and 2

```{r}
census_data_function <- function(data, values = "Enrollment_Total") {
  
 long_data <- data |> 
   select(Area_name, STCOU, ends_with("D")) |> 
   pivot_longer(cols = ends_with("D"), names_to = "EnrollmentID", values_to = values)

return(long_data) 
}

```

```{r}
census_data_function(census_data2)
```

# Write Function for step 3

there are now years after 1999 so we have to change our year mutate function

```{r}
step3func <- function(data, values = "EnrollmentID") {
  long_data = census_data_function(data) 
  
  long_updated <- long_data |> 
    mutate(Year = as.numeric(substr(EnrollmentID, start = 8, stop = 9))) |>  
    mutate(Year = ifelse(Year > 25, Year + 1900, Year + 2000)) |> 
    mutate(Measurement = substr(EnrollmentID, start = 1, stop = 7))
  return(long_updated)
}

```

```{r}
long_updated2 <- step3func(census_data2)
long_updated2
```

## Function for Step 5:
First create census_data2 subsets: 

```{r}
#County Dataset
row_names2 <- rownames(long_updated2)
county_subset2 <- row_names2 %in% grep(pattern = ", \\w\\w", long_updated2$Area_name)
county_tibble2 <- subset(long_updated2, county_subset2)
class(county_tibble2) <- c("county", class(county_tibble2))
head(county_tibble2, 10)

#State Dataset
state_tibble2 <- subset(long_updated2, !(row_names2 %in% grep(pattern = ", \\w\\w", long_updated2$Area_name)))
class(state_tibble2) <- c("state", class(state_tibble2))
head(state_tibble2, 10)
```


```{r}

step5fun <- function(data) {
  
  county_dat <- data |> 
    mutate(State = substr(data$Area_name, start = nchar(Area_name)-1, stop = nchar(Area_name)))

 return(county_dat)
  
}

step5fun(county_tibble2)

```


# Write Function for step 6
```{r}
step6func <- function(tibble) {
state_tibble1 <- tibble |> mutate(Division = case_when(
  
  Area_name %in% c("CONNECTICUT", "MAINE", "MASSACHUSETTS", "NEW HAMPSHIRE", "RHODE ISLAND", "VERMONT") ~ "New England", 
  Area_name %in% c("NEW JERSEY", "NEW YORK", "PENNYSYLVANIA") ~ "Mid-Atlantic", 
  
  Area_name %in% c("ILLINOIS", "INDIANIA", "MICHIGAN", "OHIO", "WISCONSIN") ~ "East North Central", 
  
  Area_name %in% c("IOWA", "KANSAS", "MINNESOTA", "MISSOURI", "NEBRASKA", "NORTH DAKOTA", "SOUTH DAKOTA") ~ "West North Central", 
  
  Area_name %in% c("DELAWARE", "DISTRICT OF COLUMBIA", "District of Columbia", "FLORIDA", "GEORGIA", "MARYLAND", "NORTH CAROLINA", "SOUTH CAROLINA", "VIRGINIA", "WEST VIRGINIA") ~ "South Atlantic", 
  
  Area_name %in% c("ALABAMA", "KENTUCKY", "MISSISSIPPI", "TENNESSEE") ~ "East South Central", 
  
  Area_name %in% c("ARKANSAS", "LOUISIANA", "OKLAHOMA", "TEXAS") ~"West South Central", 
  
  Area_name %in% c("ARIZONA", "COLORADO", "IDAHO", "NEVADA", "MONTANA", "NEW MEXICO", "UTAH", "WYOMING") ~ "Mountain", 
  
  Area_name %in% c("ALASKA", "CALIFORNIA", "HAWAII", "OREGON", "WASHINGTON") ~ "Pacific", .default = "ERROR"
  
))

return(state_tibble1)
}
```

```{r}
step6func(state_tibble)
```


